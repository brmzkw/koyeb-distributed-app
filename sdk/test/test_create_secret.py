# coding: utf-8

"""
    Koyeb Rest API

    The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.create_secret import CreateSecret

class TestCreateSecret(unittest.TestCase):
    """CreateSecret unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateSecret:
        """Test CreateSecret
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateSecret`
        """
        model = CreateSecret()
        if include_optional:
            return CreateSecret(
                name = '',
                type = 'SIMPLE',
                value = '',
                docker_hub_registry = openapi_client.models.docker_hub_registry_configuration.DockerHubRegistryConfiguration(
                    username = '', 
                    password = '', ),
                private_registry = openapi_client.models.private_registry_configuration.PrivateRegistryConfiguration(
                    username = '', 
                    password = '', 
                    url = '', ),
                digital_ocean_registry = openapi_client.models.digital_ocean_registry_configuration.DigitalOceanRegistryConfiguration(
                    username = '', 
                    password = '', ),
                github_registry = openapi_client.models.git_hub_registry_configuration.GitHubRegistryConfiguration(
                    username = '', 
                    password = '', ),
                gitlab_registry = openapi_client.models.git_lab_registry_configuration.GitLabRegistryConfiguration(
                    username = '', 
                    password = '', ),
                gcp_container_registry = openapi_client.models.gcp_container_registry_configuration.GCPContainerRegistryConfiguration(
                    keyfile_content = '', 
                    url = '', ),
                azure_container_registry = openapi_client.models.azure_container_registry_configuration.AzureContainerRegistryConfiguration(
                    registry_name = '', 
                    username = '', 
                    password = '', )
            )
        else:
            return CreateSecret(
        )
        """

    def testCreateSecret(self):
        """Test CreateSecret"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
