# coding: utf-8

"""
    Koyeb Rest API

    The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_domains_reply import ListDomainsReply

class TestListDomainsReply(unittest.TestCase):
    """ListDomainsReply unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListDomainsReply:
        """Test ListDomainsReply
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListDomainsReply`
        """
        model = ListDomainsReply()
        if include_optional:
            return ListDomainsReply(
                domains = [
                    openapi_client.models.domain.Domain(
                        id = '', 
                        organization_id = '', 
                        name = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        status = 'PENDING', 
                        type = 'AUTOASSIGNED', 
                        app_id = '', 
                        deployment_group = '', 
                        verified_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        intended_cname = '', 
                        messages = [
                            ''
                            ], 
                        version = '', )
                    ],
                limit = 56,
                offset = 56,
                count = 56
            )
        else:
            return ListDomainsReply(
        )
        """

    def testListDomainsReply(self):
        """Test ListDomainsReply"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
