# coding: utf-8

"""
    Koyeb Rest API

    The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.create_secret_reply import CreateSecretReply

class TestCreateSecretReply(unittest.TestCase):
    """CreateSecretReply unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateSecretReply:
        """Test CreateSecretReply
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateSecretReply`
        """
        model = CreateSecretReply()
        if include_optional:
            return CreateSecretReply(
                secret = openapi_client.models.secret.Secret(
                    id = '', 
                    name = '', 
                    organization_id = '', 
                    type = 'SIMPLE', 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    value = '', 
                    docker_hub_registry = openapi_client.models.docker_hub_registry_configuration.DockerHubRegistryConfiguration(
                        username = '', 
                        password = '', ), 
                    private_registry = openapi_client.models.private_registry_configuration.PrivateRegistryConfiguration(
                        username = '', 
                        password = '', 
                        url = '', ), 
                    digital_ocean_registry = openapi_client.models.digital_ocean_registry_configuration.DigitalOceanRegistryConfiguration(
                        username = '', 
                        password = '', ), 
                    github_registry = openapi_client.models.git_hub_registry_configuration.GitHubRegistryConfiguration(
                        username = '', 
                        password = '', ), 
                    gitlab_registry = openapi_client.models.git_lab_registry_configuration.GitLabRegistryConfiguration(
                        username = '', 
                        password = '', ), 
                    gcp_container_registry = openapi_client.models.gcp_container_registry_configuration.GCPContainerRegistryConfiguration(
                        keyfile_content = '', 
                        url = '', ), 
                    azure_container_registry = openapi_client.models.azure_container_registry_configuration.AzureContainerRegistryConfiguration(
                        registry_name = '', 
                        username = '', 
                        password = '', ), 
                    database_role_password = openapi_client.models.database_role_password.DatabaseRolePassword(
                        username = '', 
                        password = '', ), )
            )
        else:
            return CreateSecretReply(
        )
        """

    def testCreateSecretReply(self):
        """Test CreateSecretReply"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
